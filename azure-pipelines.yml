# Azure Pipelines: build the WebGL engine and wwtsdk.js files as build artifacts.

jobs:
- job: BuildSDK
  pool:
    vmImage: vs2015-win2012r2

  steps:

  - powershell: |
      $branch = "$(Build.SourceBranch)"
      if($branch.StartsWith("refs/tags/v")) {
        $version = $branch.Substring(11)
        Write-Host "##vso[task.setvariable variable=pub_prefix;]engine/$version"
      } else {
        # Won't actually get published on PRs, etc.
        Write-Host "##vso[task.setvariable variable=pub_prefix;]engine/latest"
      }
    displayName: Set deployment parameters

  - task: MSBuild@1
    displayName: Build WebGL Engine with ScriptSharp
    inputs:
      solution: 'WebGlEngine.sln'
      msbuildVersion: '14.0'
      msbuildArchitecture: 'x64'
      clean: true

  - task: NodeTool@0
    displayName: Set up node.js

  - script: npm install
    displayName: Install NPM dependencies

  - task: Grunt@0
    displayName: Build final JavaScript files
    inputs:
      gruntFile: 'Gruntfile.js'
      targets: dist-js

  - task: CopyFiles@2
    displayName: Stage WebGL engine artifacts
    inputs:
      sourceFolder: '.'
      contents: |
        wwtsdk.js
        wwtsdk.min.js
      targetFolder: $(Build.ArtifactStagingDirectory)
      cleanTargetFolder: true

  - task: PublishPipelineArtifact@0
    displayName: Publishing SDK artifact
    inputs:
      artifactName: wwt-webgl-engine
      targetPath: $(Build.ArtifactStagingDirectory)

  - script: npm install mocha chai mocha-headless-chrome --save-dev
    displayName: Installing mocha testing framework

  - script: node_modules/.bin/mocha-headless-chrome -f tests/tests.html -r xunit >test_results.xml
    displayName: Running tests against JS SDK

  # NOTE: The file produced above is actually in JUnit format, not xUnit!
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test_results.xml'

  - task: AzureFileCopy@3
    inputs:
      SourcePath: '$(build.artifactStagingDirectory)'
      azureSubscription: 'aas@wwtadmindotnetfoundation'
      Destination: 'AzureBlob'
      storage: 'wwtwebstatic'
      ContainerName: '$web'
      blobPrefix: $(pub_prefix)
